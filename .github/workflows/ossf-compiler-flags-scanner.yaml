## This workflow continually scan the master branch to make sure that
## the correct compiler flags are used when testing Erlang/OTP on github.

name: Open Source Security Foundation

on:
  workflow_dispatch:
  schedule:
    - cron: 0 1 * * *

permissions:
  # Required to upload SARIF file to CodeQL.
  # See: https://github.com/github/codeql-action/issues/2117
  actions: read
  # Require writing security events to upload SARIF file to security tab
  security-events: write
  # Only need to read contents
  contents: read

jobs:
  schedule-scan:
    runs-on: ubuntu-latest
    if: github.repository == 'erlang/otp'
    steps:
      - uses: actions/checkout@v4.2.1
      - name: Create initial pre-release tar
        run: .github/scripts/init-pre-release.sh otp_src.tar.gz
      - uses: actions/checkout@v4.2.1
        with:
            repository: ossf/wg-best-practices-os-developers
            sparse-checkout: docs/Compiler-Hardening-Guides/compiler-options-scraper
            path: ossf
    
      - name: Setup compiler options scraper
        run: |
          pip3 install -r ossf/docs/Compiler-Hardening-Guides/compiler-options-scraper/requirements.txt
          python3 ossf/docs/Compiler-Hardening-Guides/compiler-options-scraper/main.py
          cat compiler-options.json

      - uses: ./.github/actions/build-base-image
        with:
          BASE_BRANCH: master
          BUILD_IMAGE: true
      
      - name: Run compiler flag comparison
        run: |
          docker run -v `pwd`/.github/scripts:/github --entrypoint "" otp \
            bash -c "/github/ossf-sarif-generator.es '$(cat compiler-options.json)'" > results.sarif

      - name: "Upload artifact"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4 # v4.4.3
        with:
            name: SARIF file
            path: results.sarif

      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        if: ${{ !cancelled() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
            sarif_file: results.sarif
          
